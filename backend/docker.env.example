# =============================================================================
# TUM Chatbot - Docker Environment Configuration
# =============================================================================
#
# Copy this file to .env and modify as needed
# cp docker.env.example .env

# =============================================================================
# ENVIRONMENT SETTING (REQUIRED)
# =============================================================================

# Set to "development" or "production"
ENVIRONMENT=production

# =============================================================================
# API CONFIGURATION (REQUIRED)
# =============================================================================

# Google Gemini API Key (Required)
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_actual_api_key_here

# =============================================================================
# PRODUCTION-SPECIFIC SETTINGS (OPTIONAL)
# =============================================================================

# Update CORS origins for your frontend domain
# CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# Adjust rate limiting for your traffic
# RATE_LIMIT_REQUESTS=100
# RATE_LIMIT_WINDOW=3600

# =============================================================================
# DEVELOPMENT SETTINGS (OPTIONAL)
# =============================================================================

# For development, change ENVIRONMENT to:
# ENVIRONMENT=development

# Optional overrides (will use environment-based defaults if not set)
# LOG_LEVEL=DEBUG
# FLASK_DEBUG=True
# LOG_CHAT_SESSIONS=True

# =============================================================================
# NOTES
# =============================================================================
#
# 1. Set ENVIRONMENT=development for local development
# 2. Set ENVIRONMENT=production for production deployment
# 3. The system automatically configures appropriate settings based on ENVIRONMENT
# 4. You can override any setting by uncommenting and setting values above
# 5. For production, ensure GEMINI_API_KEY is set to your actual API key
# 6. For production, update CORS_ORIGINS to include your frontend domain 